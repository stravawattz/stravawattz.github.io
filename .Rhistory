y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
df <- df_all_distinct
sport_type <- "Swim"
target_year <- 2025
# Determine color scheme
default_pal <- list(run  = c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25)),
ride = c("#2d2d2d", "#f5a623", "#2e86de", rgb(0.95, 0.61, 0.07, 0.25)),
swim = c("#2d2d2d", "#2e86de", "#00bc8c", rgb(0.20, 0.60, 0.86, 0.25)))
colorscheme <- default_pal[[tolower(sport_type)]] %||% c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25))
stopifnot(length(colorscheme) == 4)
# Generate the plot if there is data
if (nrow(df %>% filter(type == sport_type & year(date) == target_year)) == 0) {plot_ly() |> layout(title = list(text = "No data available", x = 0.5, y = 0.5, xanchor = "center", font = list(size = 12, color = "white")), paper_bgcolor = colorscheme[1], plot_bgcolor = colorscheme[1], xaxis = list(visible = FALSE), yaxis = list(visible = FALSE))
} else {
df_subset <- df %>% filter(type == sport_type & year(date) == target_year) %>% arrange(hr) %>% mutate(distance = distance / ifelse(sport_type == "Swim", 1, 1000), time = time / 60, num = row_number(), bar_color = ifelse(date == max(date), colorscheme[3], colorscheme[2]))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
}
any(df_subset$num == 0)
df <- df_all_distinct
sport_type <- "Swim"
target_year <- 2025
# Determine color scheme
default_pal <- list(run  = c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25)),
ride = c("#2d2d2d", "#f5a623", "#2e86de", rgb(0.95, 0.61, 0.07, 0.25)),
swim = c("#2d2d2d", "#2e86de", "#00bc8c", rgb(0.20, 0.60, 0.86, 0.25)))
colorscheme <- default_pal[[tolower(sport_type)]] %||% c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25))
stopifnot(length(colorscheme) == 4)
# Generate the plot if there is data
if (nrow(df %>% filter(type == sport_type & year(date) == target_year)) == 0) {plot_ly() |> layout(title = list(text = "No data available", x = 0.5, y = 0.5, xanchor = "center", font = list(size = 12, color = "white")), paper_bgcolor = colorscheme[1], plot_bgcolor = colorscheme[1], xaxis = list(visible = FALSE), yaxis = list(visible = FALSE))
} else {
df_subset <- df %>% filter(type == sport_type & year(date) == target_year) %>% arrange(hr) %>% mutate(distance = distance / ifelse(sport_type == "Swim", 1, 1000), time = time / 60, num = row_number(), bar_color = ifelse(date == max(date), colorscheme[3], colorscheme[2]))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
}
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
df <- df_all_distinct
sport_type <- "Swim"
target_year <- 2025
# Determine color scheme
default_pal <- list(run  = c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25)),
ride = c("#2d2d2d", "#f5a623", "#2e86de", rgb(0.95, 0.61, 0.07, 0.25)),
swim = c("#2d2d2d", "#2e86de", "#00bc8c", rgb(0.20, 0.60, 0.86, 0.25)))
colorscheme <- default_pal[[tolower(sport_type)]] %||% c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25))
stopifnot(length(colorscheme) == 4)
# Generate the plot if there is data
if (nrow(df %>% filter(type == sport_type & year(date) == target_year)) == 0) {plot_ly() |> layout(title = list(text = "No data available", x = 0.5, y = 0.5, xanchor = "center", font = list(size = 12, color = "white")), paper_bgcolor = colorscheme[1], plot_bgcolor = colorscheme[1], xaxis = list(zeroline = FALSE, visible = FALSE), yaxis = list(visible = FALSE))
} else {
df_subset <- df %>% filter(type == sport_type & year(date) == target_year) %>% arrange(hr) %>% mutate(distance = distance / ifelse(sport_type == "Swim", 1, 1000), time = time / 60, num = row_number(), bar_color = ifelse(date == max(date), colorscheme[3], colorscheme[2]))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
}
df <- df_all_distinct
sport_type <- "Ride"
target_year <- 2025
# Determine color scheme
default_pal <- list(run  = c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25)),
ride = c("#2d2d2d", "#f5a623", "#2e86de", rgb(0.95, 0.61, 0.07, 0.25)),
swim = c("#2d2d2d", "#2e86de", "#00bc8c", rgb(0.20, 0.60, 0.86, 0.25)))
colorscheme <- default_pal[[tolower(sport_type)]] %||% c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25))
stopifnot(length(colorscheme) == 4)
# Generate the plot if there is data
if (nrow(df %>% filter(type == sport_type & year(date) == target_year)) == 0) {plot_ly() |> layout(title = list(text = "No data available", x = 0.5, y = 0.5, xanchor = "center", font = list(size = 12, color = "white")), paper_bgcolor = colorscheme[1], plot_bgcolor = colorscheme[1], xaxis = list(zeroline = FALSE, visible = FALSE), yaxis = list(visible = FALSE))
} else {
df_subset <- df %>% filter(type == sport_type & year(date) == target_year) %>% arrange(hr) %>% mutate(distance = distance / ifelse(sport_type == "Swim", 1, 1000), time = time / 60, num = row_number(), bar_color = ifelse(date == max(date), colorscheme[3], colorscheme[2]))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
}
df <- df_all_distinct
sport_type <- "Run"
target_year <- 2025
# Determine color scheme
default_pal <- list(run  = c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25)),
ride = c("#2d2d2d", "#f5a623", "#2e86de", rgb(0.95, 0.61, 0.07, 0.25)),
swim = c("#2d2d2d", "#2e86de", "#00bc8c", rgb(0.20, 0.60, 0.86, 0.25)))
colorscheme <- default_pal[[tolower(sport_type)]] %||% c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25))
stopifnot(length(colorscheme) == 4)
# Generate the plot if there is data
if (nrow(df %>% filter(type == sport_type & year(date) == target_year)) == 0) {plot_ly() |> layout(title = list(text = "No data available", x = 0.5, y = 0.5, xanchor = "center", font = list(size = 12, color = "white")), paper_bgcolor = colorscheme[1], plot_bgcolor = colorscheme[1], xaxis = list(zeroline = FALSE, visible = FALSE), yaxis = list(visible = FALSE))
} else {
df_subset <- df %>% filter(type == sport_type & year(date) == target_year) %>% arrange(hr) %>% mutate(distance = distance / ifelse(sport_type == "Swim", 1, 1000), time = time / 60, num = row_number(), bar_color = ifelse(date == max(date), colorscheme[3], colorscheme[2]))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
}
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.015, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.015, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.015, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.015, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.015, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.005, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.005, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.005, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.005, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.005, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.00, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.00, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "left"),
list(x = 0.00, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "left"),
list(x = 0.00, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.00, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.00, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
df <- df_all_distinct
sport_type <- "Ride"
target_year <- 2025
# Determine color scheme
default_pal <- list(run  = c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25)),
ride = c("#2d2d2d", "#f5a623", "#2e86de", rgb(0.95, 0.61, 0.07, 0.25)),
swim = c("#2d2d2d", "#2e86de", "#00bc8c", rgb(0.20, 0.60, 0.86, 0.25)))
colorscheme <- default_pal[[tolower(sport_type)]] %||% c("#2d2d2d", "#00bc8c", "#f5a623", rgb(0.00, 0.74, 0.55, 0.25))
stopifnot(length(colorscheme) == 4)
# Generate the plot if there is data
if (nrow(df %>% filter(type == sport_type & year(date) == target_year)) == 0) {plot_ly() |> layout(title = list(text = "No data available", x = 0.5, y = 0.5, xanchor = "center", font = list(size = 12, color = "white")), paper_bgcolor = colorscheme[1], plot_bgcolor = colorscheme[1], xaxis = list(zeroline = FALSE, visible = FALSE), yaxis = list(visible = FALSE))
} else {
df_subset <- df %>% filter(type == sport_type & year(date) == target_year) %>% arrange(hr) %>% mutate(distance = distance / ifelse(sport_type == "Swim", 1, 1000), time = time / 60, num = row_number(), bar_color = ifelse(date == max(date), colorscheme[3], colorscheme[2]))
plot_ly(data = df_subset, x = ~num, y = ~hr,
type = "scatter",
marker = list(color = ~bar_color, size = 12.5, line = list(color = "black", width = 1)),
text = ~paste0("<b>", wday(date, label = TRUE, abbr = FALSE, week_start = 1), " ", format(as.Date(date), "%d/%m/%y"), "</b><br>Distance: ", round(distance, 1), ifelse(sport_type == "Swim", " m", " km"), "<br>Time: ", round(time, 0), " min", "<br>Pace: ", paste0(floor(pace <- pace/(ifelse(sport_type == "Swim", 10, 1))), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), ifelse(sport_type == "Swim", "/100m", "/km")), "<br>Speed: ", paste0(round(speed, 1), "km/h"), "<br>Avg. HR: ", round(hr, 0), " bpm", "<br>Max. HR: ", round(hr_max, 0), " bpm", "<br>TRIMP: ", round(TRIMP, 0)),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(df_subset$num)-0.5, max(df_subset$num)+0.5), y = rep(mean(df_subset$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(df_subset$num)+0.50, y = mean(df_subset$hr, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(df_subset$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor=colorscheme[1], plot_bgcolor=colorscheme[1], hoverlabel = list(font = list(color = "white"), bgcolor = colorscheme[1], bordercolor = colorscheme[2]),
annotations = c(
list(list(x = 0.075, y = 0.98, xref = "paper", yref = "paper",
text = paste0("<span style='color:", colorscheme[3], "; border:1px solid black;'>&#x25CF;</span> <span style='color:", colorscheme[3], "'>Most recent session</span><br><span style='color:", colorscheme[2],"'>&#x25CF;</span> <span style='color:", colorscheme[2], "'>All other sessions</span>"),
showarrow = FALSE, font = list(size = 12), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0, y = (min(df_subset$hr)-5+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr4+hr5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0, y = (hr5+max(df_subset$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(df_subset), function(i) {
list(type = "line",
x0 = df_subset$num[i], x1 = df_subset$num[i],
y0 = df_subset$hr[i], y1 = df_subset$hr_max[i],
line = list(color = ifelse(i == match(max(df_subset$id), df_subset$id),
rgb(col2rgb(colorscheme[3])[1]/255,col2rgb(colorscheme[3])[2]/255,col2rgb(colorscheme[3])[3]/255, 0.25),
rgb(col2rgb(colorscheme[2])[1]/255,col2rgb(colorscheme[2])[2]/255,col2rgb(colorscheme[2])[3]/255, 0.25)), width = 5) )}),
xaxis = list(zeroline = FALSE, title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(zeroline = FALSE, tickfont = list(size=10, color=colorscheme[2]), fixedrange = TRUE, ticksuffix = " bpm", title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25, range = c(min(df_subset$hr)-5, max(df_subset$hr_max)+5), tickvals = c(hr2, hr3, hr4, hr5), ticktext = paste0(as.character(c(hr2, hr3, hr4, hr5)), " bpm")),
margin = list(l = 0, r = 0, t = 0, b = 0))
}
